CREATE TYPE roles AS ENUM ('admin', 'instructor', 'tutor');
CREATE TYPE token_type AS ENUM ('activate_account', 'reset_password');
CREATE CAST (CHARACTER VARYING AS roles) WITH INOUT AS IMPLICIT;
CREATE CAST (CHARACTER VARYING AS token_type) WITH INOUT AS IMPLICIT;

CREATE TABLE users
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username           VARCHAR(50)                             NOT NULL,
    first_name         VARCHAR(100)                            NOT NULL,
    last_name          VARCHAR(100)                            NOT NULL,
    email              VARCHAR(255)                            NOT NULL,
    active             BOOLEAN                                 NOT NULL DEFAULT TRUE,
    password_hash      VARCHAR(255)                            NOT NULL,
    failed_login_count INT                                     NOT NULL DEFAULT 0,
    full_admin         BOOLEAN                                 NOT NULL DEFAULT FALSE,
    activated_date     TIMESTAMP WITH TIME ZONE,
    lockout_end        TIMESTAMP WITH TIME ZONE,
    created_by         VARCHAR(255),
    created_date       TIMESTAMP WITH TIME ZONE,
    last_modified_by   VARCHAR(255),
    last_modified_date TIMESTAMP WITH TIME ZONE,
    CONSTRAINT users_pk PRIMARY KEY (id),
    CONSTRAINT users_email_uq UNIQUE (email),
    CONSTRAINT users_username_uq UNIQUE (username)
);

CREATE TABLE user_tokens
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type       token_type                              NOT NULL,
    user_id    BIGINT                                  NOT NULL,
    token      VARCHAR(255)                            NOT NULL,
    expires_at TIMESTAMP WITH TIME ZONE                NOT NULL,
    CONSTRAINT user_tokens_pk PRIMARY KEY (id),
    CONSTRAINT user_tokens_token_uq UNIQUE (type, token),
    CONSTRAINT user_tokens_users_fk FOREIGN KEY (user_id) REFERENCES users (id)
        ON DELETE CASCADE
);

CREATE TABLE organizational_units
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name               VARCHAR(255)                            NOT NULL,
    created_by         VARCHAR(255),
    created_date       TIMESTAMP WITH TIME ZONE,
    last_modified_by   VARCHAR(255),
    last_modified_date TIMESTAMP WITH TIME ZONE,
    CONSTRAINT organizational_units_pk PRIMARY KEY (id),
    CONSTRAINT organizational_units_name_uq UNIQUE (name)
);

CREATE TABLE organizational_unit_users
(
    organizational_unit_id BIGINT NOT NULL,
    user_id                BIGINT NOT NULL,
    role                   roles  NOT NULL,
    CONSTRAINT organizational_unit_users_pk PRIMARY KEY (organizational_unit_id, user_id),
    CONSTRAINT organizational_unit_users_ou_fk FOREIGN KEY (organizational_unit_id) REFERENCES organizational_units (id)
        ON DELETE CASCADE,
    CONSTRAINT organizational_unit_users_user_fk FOREIGN KEY (user_id) REFERENCES users (id)
        ON DELETE CASCADE
);

-- DO NOT CHANGE: used for ACL provided by Spring Security
CREATE TABLE acl_sid
(
    id        BIGSERIAL    NOT NULL PRIMARY KEY,
    principal BOOLEAN      NOT NULL,
    sid       VARCHAR(100) NOT NULL,
    CONSTRAINT acl_sid_uq UNIQUE (sid, principal)
);

CREATE TABLE acl_class
(
    id    BIGSERIAL    NOT NULL PRIMARY KEY,
    class VARCHAR(100) NOT NULL,
    CONSTRAINT acl_class_uq UNIQUE (class)
);

CREATE TABLE acl_object_identity
(
    id                 BIGSERIAL PRIMARY KEY,
    object_id_class    BIGINT      NOT NULL,
    object_id_identity VARCHAR(36) NOT NULL,
    parent_object      BIGINT,
    owner_sid          BIGINT,
    entries_inheriting BOOLEAN     NOT NULL,
    CONSTRAINT acl_object_identity_uq UNIQUE (object_id_class, object_id_identity),
    CONSTRAINT acl_object_identity_parent_fk FOREIGN KEY (parent_object) REFERENCES acl_object_identity (id),
    CONSTRAINT acl_object_identity_class_fk FOREIGN KEY (object_id_class) REFERENCES acl_class (id),
    CONSTRAINT acl_object_identity_sid_fk FOREIGN KEY (owner_sid) REFERENCES acl_sid (id)
);

CREATE TABLE acl_entry
(
    id                  BIGSERIAL PRIMARY KEY,
    acl_object_identity BIGINT  NOT NULL,
    ace_order           INT     NOT NULL,
    sid                 BIGINT  NOT NULL,
    mask                INTEGER NOT NULL,
    granting            BOOLEAN NOT NULL,
    audit_success       BOOLEAN NOT NULL,
    audit_failure       BOOLEAN NOT NULL,
    CONSTRAINT acl_entry_uq UNIQUE (acl_object_identity, ace_order),
    CONSTRAINT acl_entry_object_fk FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity (id),
    CONSTRAINT acl_entry_sid_fk FOREIGN KEY (sid) REFERENCES acl_sid (id)
);
